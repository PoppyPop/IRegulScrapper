[metadata]
name = aioiregul
version = 0.1.0
author = PoppyPop
author_email = skytep@gmail.com
description = Asynchronous library to get data from IRegul systems
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/PoppyPop/aioiregul
project_urls =
    Bug Tracker = https://github.com/PoppyPop/aioiregul/issues
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Operating System :: OS Independent
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    Topic :: Home Automation

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.6
install_requires =
    BeautifulSoup4
    aiohttp
    python-slugify

[options.packages.find]
where = src

[options.extras_require]
all = BeautifulSoup4; aiohttp; python-slugify
test = FastAPI; uvicorn; pytest-asyncio; pytest-xdist

[flake8]
exclude = .venv,.git,.tox,docs,venv,bin,lib,deps,build
doctests = True
# To work with Black
max-line-length = 88
# E501: line too long
# W503: Line break occurred before a binary operator
# E203: Whitespace before ':'
# D202 No blank lines allowed after function docstring
# W504 line break after binary operator
ignore =
    E501,
    W503,
    E203,
    D202,
    W504

[isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
# splits long import on multiple lines indented by 4 spaces
multi_line_output = 3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
indent = "    "
# by default isort don't check module indexes
not_skip = __init__.py
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
sections = FUTURE,STDLIB,INBETWEENS,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
known_first_party = custom_components.teleinformation, tests
combine_as_imports = true

[tool:pytest]
addopts = -qq --cov=custom_components.teleinformation
console_output_style = count

[coverage:run]
branch = False

[coverage:report]
show_missing = true
fail_under = 100
